Index: src/Differ.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Differ\\Differ;\n\nuse function Funct\\Collection\\union;\nuse function Differ\\Parsers\\parse;\nuse function Differ\\Formatters\\render;\nuse function Funct\\Collection\\sortBy;\n\n/**\n * @throws \\Exception\n */\nfunction getFormattedData($path): array\n{\n    $extension = pathinfo($path, PATHINFO_EXTENSION);\n\n    if (!file_exists($path)) {\n        throw new \\Exception('No such file or directory');\n    }\n\n    $data = file_get_contents($path);\n    return [$data, $extension];\n}\n\n/**\n * @param string $file1\n * @param string $file2\n * @return string\n */\nfunction genDiff(string $file1, string $file2, string $format = 'stylish'): string\n{\n    [$firstFileData, $firstFileFormat] = getFormattedData($file1);\n    [$secondFileData, $secondFileFormat] = getFormattedData($file2);\n\n    $parseFile1 = parse($firstFileData, $firstFileFormat);\n    $parseFile2 = parse($secondFileData, $secondFileFormat);\n\n    $diffTree = buildTree($parseFile1, $parseFile2);\n    $result = render($diffTree, $format);\n    $r = $format === 'stylish' ? \"{\\n{$result}\\n}\" : $result;\n    return $r;\n}\n\n/**\n * @param object $file1\n * @param object $file2\n * @return array\n */\nfunction buildTree(object $file1, object $file2): array\n{\n    $sortKeys = union(array_keys(get_object_vars($file1)), array_keys(get_object_vars($file2)));\n    $sortedKeys = array_values(sortBy($sortKeys, fn($key) => $key));\n\n    return array_map(function ($node) use ($file1, $file2): array {\n        if (!property_exists($file1, $node)) {\n            return ['key' => $node, 'type' => 'added', 'valueAfter' => $file2->$node];\n        }\n        if (!property_exists($file2, $node)) {\n            return ['key' => $node, 'type' => 'removed', 'valueBefore' => $file1->$node];\n        }\n        if (is_object($file1->$node) && is_object($file2->$node)) {\n            return ['key' => $node, 'type' => 'nested', 'children' => buildTree($file1->$node, $file2->$node)];\n        }\n        if ($file1->$node === $file2->$node) {\n            return ['key' => $node, 'type' => 'unchanged', 'valueBefore' => $file1->$node];\n        }\n        return ['key' => $node, 'type' => 'changed', 'valueBefore' => $file2->$node, 'valueAfter' => $file1->$node];\n    }, $sortedKeys);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Differ.php b/src/Differ.php
--- a/src/Differ.php	(revision 86689f90c2b4342c54053b5b24ab598baa721684)
+++ b/src/Differ.php	(date 1620060083017)
@@ -27,7 +27,7 @@
  * @param string $file2
  * @return string
  */
-function genDiff(string $file1, string $file2, string $format = 'stylish'): string
+function genDiff(string $file1, string $file2, string $format = 'stylish')
 {
     [$firstFileData, $firstFileFormat] = getFormattedData($file1);
     [$secondFileData, $secondFileFormat] = getFormattedData($file2);
Index: .phpunit.result.cache
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>C:37:\"PHPUnit\\Runner\\DefaultTestResultCache\":233:{a:2:{s:7:\"defects\";a:1:{s:54:\"Differ\\Tests\\GenDiffTest::testGenDiff with data set #0\";i:3;}s:5:\"times\";a:2:{s:37:\"Differ\\Tests\\GenDiffTest::testGenDiff\";d:0.003;s:54:\"Differ\\Tests\\GenDiffTest::testGenDiff with data set #0\";d:0.002;}}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.phpunit.result.cache b/.phpunit.result.cache
--- a/.phpunit.result.cache	(revision 86689f90c2b4342c54053b5b24ab598baa721684)
+++ b/.phpunit.result.cache	(date 1620059470951)
@@ -1,1 +1,1 @@
-C:37:"PHPUnit\Runner\DefaultTestResultCache":233:{a:2:{s:7:"defects";a:1:{s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #0";i:3;}s:5:"times";a:2:{s:37:"Differ\Tests\GenDiffTest::testGenDiff";d:0.003;s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #0";d:0.002;}}}
\ No newline at end of file
+C:37:"PHPUnit\Runner\DefaultTestResultCache":649:{a:2:{s:7:"defects";a:2:{s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #0";i:3;s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #1";i:3;}s:5:"times";a:7:{s:37:"Differ\Tests\GenDiffTest::testGenDiff";d:0.003;s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #0";d:0.005;s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #1";d:0.007;s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #2";d:0.002;s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #3";d:0.004;s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #4";d:0.001;s:54:"Differ\Tests\GenDiffTest::testGenDiff with data set #5";d:0.004;}}}
\ No newline at end of file
Index: src/formatters/json.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Differ\\Formatters\\Json;\n\n/**\n * @param $tree\n * @return false|string\n */\nfunction format($tree)\n{\n    return json_encode($tree, JSON_THROW_ON_ERROR);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/formatters/json.php b/src/formatters/json.php
--- a/src/formatters/json.php	(revision 86689f90c2b4342c54053b5b24ab598baa721684)
+++ b/src/formatters/json.php	(date 1620060165637)
@@ -8,5 +8,5 @@
  */
 function format($tree)
 {
-    return json_encode($tree, JSON_THROW_ON_ERROR);
+    return json_encode($tree);
 }
Index: src/Parser.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace Differ\\Parsers;\n\nuse Exception;\nuse Symfony\\Component\\Yaml\\Yaml;\n\n/**\n * @throws Exception\n */\nfunction parse($data, string $format)\n{\n    switch (mb_strtolower($format)) {\n        case 'json':\n            return json_decode($data);\n        case 'yaml':\n        case 'yml':\n            return Yaml::parse($data, Yaml::PARSE_OBJECT_FOR_MAP);\n        default:\n            throw new Exception(\"format $format not supported\");\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Parser.php b/src/Parser.php
--- a/src/Parser.php	(revision 86689f90c2b4342c54053b5b24ab598baa721684)
+++ b/src/Parser.php	(date 1620059878818)
@@ -10,7 +10,7 @@
  */
 function parse($data, string $format)
 {
-    switch (mb_strtolower($format)) {
+    switch ($format) {
         case 'json':
             return json_decode($data);
         case 'yaml':
Index: build/logs/clover.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build/logs/clover.xml b/build/logs/clover.xml
new file mode 100644
--- /dev/null	(date 1620059470955)
+++ b/build/logs/clover.xml	(date 1620059470955)
@@ -0,0 +1,140 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<coverage generated="1620059470">
+  <project timestamp="1620059470">
+    <file name="/home/igor/php-project-lvl2/src/Differ.php">
+      <line num="15" type="stmt" count="6"/>
+      <line num="17" type="stmt" count="6"/>
+      <line num="18" type="stmt" count="0"/>
+      <line num="21" type="stmt" count="6"/>
+      <line num="22" type="stmt" count="6"/>
+      <line num="32" type="stmt" count="6"/>
+      <line num="33" type="stmt" count="6"/>
+      <line num="35" type="stmt" count="6"/>
+      <line num="36" type="stmt" count="6"/>
+      <line num="38" type="stmt" count="6"/>
+      <line num="39" type="stmt" count="6"/>
+      <line num="40" type="stmt" count="6"/>
+      <line num="41" type="stmt" count="6"/>
+      <line num="51" type="stmt" count="6"/>
+      <line num="52" type="stmt" count="6"/>
+      <line num="54" type="stmt" count="6"/>
+      <line num="55" type="stmt" count="6"/>
+      <line num="56" type="stmt" count="6"/>
+      <line num="58" type="stmt" count="6"/>
+      <line num="59" type="stmt" count="6"/>
+      <line num="61" type="stmt" count="6"/>
+      <line num="62" type="stmt" count="6"/>
+      <line num="64" type="stmt" count="6"/>
+      <line num="65" type="stmt" count="6"/>
+      <line num="67" type="stmt" count="6"/>
+      <line num="68" type="stmt" count="6"/>
+      <metrics loc="69" ncloc="56" classes="0" methods="0" coveredmethods="0" conditionals="0" coveredconditionals="0" statements="26" coveredstatements="25" elements="26" coveredelements="25"/>
+    </file>
+    <file name="/home/igor/php-project-lvl2/src/Parser.php">
+      <line num="13" type="stmt" count="6"/>
+      <line num="14" type="stmt" count="6"/>
+      <line num="15" type="stmt" count="3"/>
+      <line num="16" type="stmt" count="3"/>
+      <line num="17" type="stmt" count="3"/>
+      <line num="18" type="stmt" count="3"/>
+      <line num="20" type="stmt" count="0"/>
+      <metrics loc="22" ncloc="19" classes="0" methods="0" coveredmethods="0" conditionals="0" coveredconditionals="0" statements="7" coveredstatements="6" elements="7" coveredelements="6"/>
+    </file>
+    <file name="/home/igor/php-project-lvl2/src/formatter.php">
+      <line num="17" type="stmt" count="6"/>
+      <line num="18" type="stmt" count="6"/>
+      <line num="19" type="stmt" count="2"/>
+      <line num="20" type="stmt" count="4"/>
+      <line num="21" type="stmt" count="2"/>
+      <line num="22" type="stmt" count="2"/>
+      <line num="23" type="stmt" count="2"/>
+      <line num="25" type="stmt" count="0"/>
+      <metrics loc="27" ncloc="21" classes="0" methods="0" coveredmethods="0" conditionals="0" coveredconditionals="0" statements="8" coveredstatements="7" elements="8" coveredelements="7"/>
+    </file>
+    <file name="/home/igor/php-project-lvl2/src/formatters/json.php">
+      <line num="11" type="stmt" count="2"/>
+      <metrics loc="12" ncloc="8" classes="0" methods="0" coveredmethods="0" conditionals="0" coveredconditionals="0" statements="1" coveredstatements="1" elements="1" coveredelements="1"/>
+    </file>
+    <file name="/home/igor/php-project-lvl2/src/formatters/plain.php">
+      <line num="9" type="stmt" count="2"/>
+      <line num="10" type="stmt" count="2"/>
+      <line num="11" type="stmt" count="2"/>
+      <line num="12" type="stmt" count="2"/>
+      <line num="13" type="stmt" count="2"/>
+      <line num="15" type="stmt" count="2"/>
+      <line num="16" type="stmt" count="2"/>
+      <line num="17" type="stmt" count="2"/>
+      <line num="18" type="stmt" count="2"/>
+      <line num="19" type="stmt" count="2"/>
+      <line num="20" type="stmt" count="2"/>
+      <line num="21" type="stmt" count="2"/>
+      <line num="22" type="stmt" count="2"/>
+      <line num="23" type="stmt" count="2"/>
+      <line num="24" type="stmt" count="2"/>
+      <line num="25" type="stmt" count="2"/>
+      <line num="26" type="stmt" count="2"/>
+      <line num="27" type="stmt" count="2"/>
+      <line num="28" type="stmt" count="2"/>
+      <line num="30" type="stmt" count="2"/>
+      <line num="31" type="stmt" count="2"/>
+      <line num="36" type="stmt" count="2"/>
+      <line num="37" type="stmt" count="2"/>
+      <line num="39" type="stmt" count="2"/>
+      <line num="40" type="stmt" count="2"/>
+      <line num="42" type="stmt" count="2"/>
+      <line num="43" type="stmt" count="2"/>
+      <line num="45" type="stmt" count="2"/>
+      <line num="46" type="stmt" count="0"/>
+      <line num="48" type="stmt" count="2"/>
+      <metrics loc="49" ncloc="49" classes="0" methods="0" coveredmethods="0" conditionals="0" coveredconditionals="0" statements="30" coveredstatements="29" elements="30" coveredelements="29"/>
+    </file>
+    <file name="/home/igor/php-project-lvl2/src/formatters/tylish.php">
+      <line num="14" type="stmt" count="2"/>
+      <line num="16" type="stmt" count="2"/>
+      <line num="17" type="stmt" count="2"/>
+      <line num="18" type="stmt" count="2"/>
+      <line num="19" type="stmt" count="2"/>
+      <line num="22" type="stmt" count="2"/>
+      <line num="23" type="stmt" count="2"/>
+      <line num="24" type="stmt" count="2"/>
+      <line num="26" type="stmt" count="2"/>
+      <line num="27" type="stmt" count="0"/>
+      <line num="28" type="stmt" count="0"/>
+      <line num="29" type="stmt" count="0"/>
+      <line num="31" type="stmt" count="2"/>
+      <line num="32" type="stmt" count="2"/>
+      <line num="34" type="stmt" count="2"/>
+      <line num="35" type="stmt" count="2"/>
+      <line num="37" type="stmt" count="2"/>
+      <line num="47" type="stmt" count="2"/>
+      <line num="48" type="stmt" count="2"/>
+      <line num="50" type="stmt" count="2"/>
+      <line num="53" type="stmt" count="2"/>
+      <line num="63" type="stmt" count="2"/>
+      <line num="64" type="stmt" count="2"/>
+      <line num="65" type="stmt" count="2"/>
+      <line num="66" type="stmt" count="2"/>
+      <line num="68" type="stmt" count="2"/>
+      <line num="69" type="stmt" count="2"/>
+      <line num="70" type="stmt" count="2"/>
+      <line num="71" type="stmt" count="2"/>
+      <line num="73" type="stmt" count="2"/>
+      <line num="74" type="stmt" count="2"/>
+      <line num="75" type="stmt" count="2"/>
+      <line num="77" type="stmt" count="2"/>
+      <line num="78" type="stmt" count="2"/>
+      <line num="79" type="stmt" count="2"/>
+      <line num="81" type="stmt" count="2"/>
+      <line num="82" type="stmt" count="2"/>
+      <line num="83" type="stmt" count="2"/>
+      <line num="84" type="stmt" count="2"/>
+      <line num="86" type="stmt" count="2"/>
+      <line num="87" type="stmt" count="2"/>
+      <line num="88" type="stmt" count="2"/>
+      <line num="90" type="stmt" count="2"/>
+      <line num="91" type="stmt" count="2"/>
+      <metrics loc="92" ncloc="77" classes="0" methods="0" coveredmethods="0" conditionals="0" coveredconditionals="0" statements="44" coveredstatements="41" elements="44" coveredelements="41"/>
+    </file>
+    <metrics files="6" loc="271" ncloc="230" classes="0" methods="0" coveredmethods="0" conditionals="0" coveredconditionals="0" statements="116" coveredstatements="109" elements="116" coveredelements="109"/>
+  </project>
+</coverage>
Index: .idea/php.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/php.xml b/.idea/php.xml
new file mode 100644
--- /dev/null	(date 1620383899463)
+++ b/.idea/php.xml	(date 1620383899463)
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="PhpCodeSniffer">
+    <phpcs_settings>
+      <PhpCSConfiguration beautifier_path="$PROJECT_DIR$/vendor/bin/phpcbf" tool_path="$PROJECT_DIR$/vendor/bin/phpcs" />
+    </phpcs_settings>
+  </component>
+  <component name="PhpIncludePathManager">
+    <include_path>
+      <path value="$PROJECT_DIR$/vendor/composer" />
+      <path value="$PROJECT_DIR$/vendor/docopt/docopt" />
+      <path value="$PROJECT_DIR$/vendor/funct/funct" />
+      <path value="$PROJECT_DIR$/vendor/squizlabs/php_codesniffer" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/global-state" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/object-enumerator" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/resource-operations" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/version" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/cli-parser" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/comparator" />
+      <path value="$PROJECT_DIR$/vendor/phar-io/manifest" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/exporter" />
+      <path value="$PROJECT_DIR$/vendor/phpdocumentor/type-resolver" />
+      <path value="$PROJECT_DIR$/vendor/phar-io/version" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/code-unit-reverse-lookup" />
+      <path value="$PROJECT_DIR$/vendor/phpdocumentor/reflection-docblock" />
+      <path value="$PROJECT_DIR$/vendor/doctrine/instantiator" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/lines-of-code" />
+      <path value="$PROJECT_DIR$/vendor/phpdocumentor/reflection-common" />
+      <path value="$PROJECT_DIR$/vendor/myclabs/deep-copy" />
+      <path value="$PROJECT_DIR$/vendor/theseer/tokenizer" />
+      <path value="$PROJECT_DIR$/vendor/symfony/polyfill-ctype" />
+      <path value="$PROJECT_DIR$/vendor/webmozart/assert" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-invoker" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-text-template" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-file-iterator" />
+      <path value="$PROJECT_DIR$/vendor/nikic/php-parser" />
+      <path value="$PROJECT_DIR$/vendor/phpspec/prophecy" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/phpunit" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-code-coverage" />
+      <path value="$PROJECT_DIR$/vendor/phpunit/php-timer" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/complexity" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/recursion-context" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/environment" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/object-reflector" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/diff" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/type" />
+      <path value="$PROJECT_DIR$/vendor/sebastian/code-unit" />
+      <path value="$PROJECT_DIR$/vendor/symfony/deprecation-contracts" />
+      <path value="$PROJECT_DIR$/vendor/symfony/yaml" />
+    </include_path>
+  </component>
+  <component name="PhpProjectSharedConfiguration" php_language_level="7.1" />
+  <component name="PhpUnit">
+    <phpunit_settings>
+      <PhpUnitSettings configuration_file_path="$PROJECT_DIR$/phpunit.xml" custom_loader_path="$PROJECT_DIR$/vendor/autoload.php" use_configuration_file="true" />
+    </phpunit_settings>
+  </component>
+</project>
\ No newline at end of file
Index: file1.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/file1.json b/file1.json
new file mode 100644
--- /dev/null	(date 1620060024977)
+++ b/file1.json	(date 1620060024977)
@@ -0,0 +1,26 @@
+{
+    "common": {
+      "setting1": "Value 1",
+      "setting2": 200,
+      "setting3": true,
+      "setting6": {
+        "key": "value",
+        "doge": {
+          "wow": ""
+        }
+      }
+    },
+    "group1": {
+      "baz": "bas",
+      "foo": "bar",
+      "nest": {
+        "key": "value"
+      }
+    },
+    "group2": {
+      "abc": 12345,
+      "deep": {
+        "id": 45
+      }
+    }
+  }
\ No newline at end of file
Index: file2.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/file2.json b/file2.json
new file mode 100644
--- /dev/null	(date 1620060042377)
+++ b/file2.json	(date 1620060042377)
@@ -0,0 +1,31 @@
+{
+    "common": {
+      "follow": false,
+      "setting1": "Value 1",
+      "setting3": null,
+      "setting4": "blah blah",
+      "setting5": {
+        "key5": "value5"
+      },
+      "setting6": {
+        "key": "value",
+        "ops": "vops",
+        "doge": {
+          "wow": "so much"
+        }
+      }
+    },
+    "group1": {
+      "foo": "bar",
+      "baz": "bars",
+      "nest": "str"
+    },
+    "group3": {
+      "fee": 100500,
+      "deep": {
+        "id": {
+          "number": 45
+        }
+      }
+    }
+  }
\ No newline at end of file
diff --git a/file2.yml b/file2.yml
new file mode 100644
diff --git a/file1.yml b/file1.yml
new file mode 100644
